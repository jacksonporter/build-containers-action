name: Build Containers

on:
  workflow_call:
    secrets:
      github-token:
        description: The GitHub token to use for the build
    inputs:
      config:
        type: string
        description: The config file contents
        default: ''
      config-file:
        type: string
        description: The path to the config file
        default: 'containers-build.toml'
      config-format:
        type: string
        description: The format of the config
        default: ''
      config-file-format:
        type: string
        description: The format of the config file
        default: 'toml'
      default-runner-label:
        type: string
        description: The default runner label to use for the build
        default: '["ubuntu-latest"]'
      enable-mise-configuration:
        type: boolean
        description: Whether to enable Mise for the build
        default: true
      enable-mise-install:
        type: boolean
        description: Whether to install Mise for the build
        default: false
      pre-build-command:
        type: string
        description: The command to run before the build
        default: ''
      post-build-command:
        type: string
        description: The command to run after the build
      build-output-artifact-name-prefix:
        type: string
        description: The prefix to use for the build output artifact
        default: 'build-containers-action-build-output-'

jobs:
  generate-matrix:
    runs-on: ${{ fromJson(inputs.default-runner-label) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: build-containers-action-matrix-generation
        uses: jacksonporter/build-containers-action@jp/v1dev
        with:
          config: ${{ inputs.config }}
          config-file: ${{ inputs.config-file }}
          config-file-format: ${{ inputs.config-file-format }}
          mode: generate-matrix
    outputs:
      jobMatrix:
        ${{ steps.build-containers-action-matrix-generation.outputs.jobMatrix}}

  build:
    needs:
      - generate-matrix
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.jobMatrix) }}
      fail-fast: false
    runs-on: ${{ matrix.ci.defaultRunnerLabels }}
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Mise
        uses: jdx/mise-action@v2
        if: inputs.enable-mise-configuration == true
        with:
          experimental: true
          install: ${{ inputs.enable-mise-install }}

      - name: Run pre-build command
        if: inputs.pre-build-command != ''
        run: |
          ${{ inputs.pre-build-command }}

      - name: Set up QEMU
        if: matrix.ci.useBuildkit == true
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        if: matrix.ci.useBuildkit == true
        uses: docker/setup-buildx-action@v3
      - id: build-containers-action-build-buildkit
        if: matrix.ci.useBuildkit == true
        uses: jacksonporter/build-containers-action@jp/v1dev
        env:
          DOCKER_BUILDKIT: '1'
          GITHUB_TOKEN: ${{ secrets.github-token }}
        with:
          config: |
            ${{ toJson(matrix) }}
          config-format: 'jobInclude'
          config-file-format: 'json'
          mode: 'build'

      - id: build-containers-action-build
        if: matrix.ci.useBuildkit == false
        uses: jacksonporter/build-containers-action@jp/v1dev
        env:
          GITHUB_TOKEN: ${{ secrets.github-token }}
        with:
          config: |
            ${{ toJson(matrix) }}
          config-format: 'jobInclude'
          config-file-format: 'json'
          mode: 'build'

      - name: Run post-build command
        if: inputs.post-build-command != ''
        run: |
          ${{ inputs.post-build-command }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: matrix.ci.useBuildkit == false
        with:
          name: ${{ inputs.build-output-artifact-name-prefix }}${{ matrix.job }}
          path:
            ${{
            steps.build-containers-action-build.outputs.build-output-json-path
            }}
          retention-days: 1

  combine-build-outputs:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download all artifacts
        uses: actions/download-artifact@v4
      - id: combine-build-outputs
        uses: jacksonporter/build-containers-action@jp/v1dev
        with:
          mode: combine-build-outputs
          build-output-artifact-name-prefix:
            ${{ inputs.build-output-artifact-name-prefix }}

    outputs:
      build-output-json:
        ${{ steps.combine-build-outputs.outputs.build-output-json }}

  test:
    runs-on: ubuntu-latest
    needs:
      - combine-manifest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: |
          echo ${{ needs.combine-manifest.outputs.build-output-json }}
